<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>NexentaEdge Blog</title>
        <link>https://nexentaedge.github.io/blog</link>
        <description>The best place to stay up-to-date with the latest NexentaEdge news and events.</description>
        <lastBuildDate>Thu, 22 Mar 2018 06:00:00 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <image>
            <title>NexentaEdge Blog</title>
            <url>https://nexentaedge.github.io/img/logo-nexenta-edge.png</url>
            <link>https://nexentaedge.github.io/blog</link>
        </image>
        <copyright>Copyright Â© 2018 Nexenta Systems</copyright>
        <item>
            <title><![CDATA[Location Independent References]]></title>
            <link>https://nexentaedge.github.io/blog/2018/03/22/LocationIndependentReferences.html</link>
            <guid>https://nexentaedge.github.io/blog/2018/03/22/LocationIndependentReferences.html</guid>
            <pubDate>Thu, 22 Mar 2018 06:00:00 GMT</pubDate>
            <description><![CDATA[<p>In the prior blog on NexentaEdge we mentioned that
Chunks were unique and immutable and that Chunk References
merely identify how a Chunk is used to rebuild an object,
but do not specify the locations where the chunk is stored.</p>
<p>This time we will exp</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[Consensus, Who Needs It?]]></title>
            <link>https://nexentaedge.github.io/blog/2018/03/20/ConsensusNotNeeded.html</link>
            <guid>https://nexentaedge.github.io/blog/2018/03/20/ConsensusNotNeeded.html</guid>
            <pubDate>Tue, 20 Mar 2018 06:00:00 GMT</pubDate>
            <description><![CDATA[<p>The conventional tradeoff for distributed storage clusters is between transactional consistency and eventual consistency. Eventual consistency is usually viewed as the cheaper solution, both in terms of desirability and system cost. The critical cost</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[One SDS feature that made ZFS famous]]></title>
            <link>https://nexentaedge.github.io/blog/2016/03/11/blog-post.html</link>
            <guid>https://nexentaedge.github.io/blog/2016/03/11/blog-post.html</guid>
            <pubDate>Fri, 11 Mar 2016 06:00:00 GMT</pubDate>
            <description><![CDATA[<p>It was back in 2005 when Sun Microsystems unveiled OpenSolaris and an with it young yet brave new file system called ZFS. Clearly Sun did lots of marketing to get ZFS widely recognized and known. Mostly it was grass root effort via engineering blogs</p>
]]></description>
        </item>
    </channel>
</rss>